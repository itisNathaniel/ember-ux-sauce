.uxs-form {
  display       : flex;
  flex-direction: column;
  position      : relative;

  // Form Controls
  &__control {
    position     : relative;
    margin-bottom: rs(2);
    // min height should accomodate for forms with no help text
    // not jumping content when they receive an error message
    min-height   : rs(10);
  }

  // Form Labels
  &__label {
    $element      : '.uxs-form__label';
    pointer-events: none;

    &--filled {
      @include transition-all;
      @include body-1;
      color      : $c-grey;
      line-height: rs(6);
      padding    : 0 rs(1.5);
      position   : absolute;
      top        : rs(.5);
      left       : 0;

      &.active,
      &.focus {
        @include caption;
        color      : $c-accent;
        line-height: rs(2);
      }

      &.inactive {}

      &#{$element}--invalid {
        color: $c-error;
      }
    }

    &--outlined {
      @include transition-all;
      @include body-1;
      color      : $c-grey;
      left       : rs(1);
      line-height: rs(6);
      padding    : 0 rs(0.75);
      position   : absolute;
      top        : rs(.5);

      &.active,
      &.focus {
        @include caption;
        background-color: $c-white;
        color           : $c-accent;
        line-height     : rs(2);
        top             : rs(-0.75);
      }

      &.inactive {}

      &#{$element}--invalid {
        color: $c-error;
      }
    }

  }

  // Input Container
  &__input-container {
    $element      : '.uxs-form__input-container';
    display       : flex;
    flex-direction: row;
    min-height    : rs(7);
    min-width     : rs(32);
    max-width     : 100%;
    @include mq(tablet) {
      max-width: rs(48);
    }

    &--filled {
      background-color       : $c-light;
      border-bottom          : rem-size(2px) solid $c-accent;
      border-top-left-radius : rs(.5);
      border-top-right-radius: rs(.5);

      &#{$element}--invalid {
        border-bottom-color: $c-error;
      }
    }

    &--outlined {
      background-color: $c-white;
      border          : rem-size(1px) solid $c-mid;
      border-radius   : rs(.5);

      &.focus {
        border-color: $c-accent;
        box-shadow  : inset 0 0 0 rem-size(1px) $c-accent;
      }

      &#{$element}--invalid {
        border-color: $c-error;
        box-shadow  : inset 0 0 0 rem-size(1spx) $c-error;
      }
    }
  }

  // Form Inputs
  &__input,
  &__textarea {
    @include transition-all();
    @include body-1;
    background-color: transparent;
    flex            : 1 1 auto;
    max-width       : none;

    &--filled {
      line-height: rs(4.25);
      padding    : rs(2.5) rs(1.5) 0;
    }

    &--outlined {
      line-height: rs(6.75);
      padding    : 0 rs(1.75);
    }

    &--has-prefix {
      padding-left: 0;
    }

    &--has-suffix {
      padding-right: 0;
    }

    // Alignment
    @include align-modifiers;
  }

  &__input {}

  &__textarea {
    &--filled {
      line-height   : rs(3);
      // padding-top   : rs(3.125);
      margin-top    : rs(2.5);
      padding-top   : rs(0.625);
      padding-bottom: rs(0.625);
    }

    &--outlined {
      line-height   : rs(3);
      padding-top   : rs(2);
      padding-bottom: rs(1.75);
    }
  }

  // Input Prefix/Suffix Text
  &__prefix-text,
  &__suffix-text {
    @include body-1;
    @include transition-all;
    color: $c-mid;

    &--filled {
      opacity    : 0;
      padding    : rs(2.5) rs(1.5) 0;
      line-height: rs(4.25);

      &.active,
      &.focus {
        opacity: 1;
      }
    }

    &--outlined {
      opacity    : 0;
      padding    : 0 rs(1.75);
      line-height: rs(6.75);

      &.active,
      &.focus {
        opacity: 1;
      }
    }
  }

  &__prefix-text {
    &--filled {
      padding-right: rs(0.5);
    }

    &--outlined {
      padding-right: rs(0.5);
    }
  }

  &__suffix-text {
    &--filled {
      padding-left: rs(0.5);
    }

    &--outlined {
      padding-left: rs(0.5);
    }
  }

  // Input Prefix/Suffix
  &__prefix-icon,
  &__suffix-icon {
    align-items    : center;
    display        : flex;
    justify-content: center;
    height         : rs(6.75);
    width          : rs(6);
  }

  // Form Tips & Errors
  &__error,
  &__tip {
    @include align-modifiers;
    @include body-2;
    @include caption;
    color      : $c-grey;
    line-height: rs(2);

    &--filled {
      padding: rs(0.5) rs(1.5);
    }

    &--outlined {
      padding: rs(0.5) rs(1.75);
    }

  }

  &__tip {
    &--invalid {
      display: none;
    }
  }

  &__error {
    color: $c-error;
  }
}

// .ember-basic-dropdown-trigger
.ember-power-select-trigger {
  background: transparent;
  display   : flex;
  flex      : 1 1 auto;
  position  : relative;
  width     : auto;
}

.ember-power-select-selected-item {
  @include body-1;
  display: block;
  flex   : 1 1 auto;
}

.ember-power-select-status-icon {
  position    : absolute;
  display     : inline-block;
  width       : 0;
  height      : 0;
  top         : 0;
  bottom      : 0;
  margin      : auto;
  border-style: solid;
  border-width: rem-size(8px) rem-size(5px) 0;
  border-color: $c-grey transparent transparent;
  right       : rs(2.5);
}

.uxs-form__control {
  &--filled {
    .ember-power-select-trigger {
      line-height: rs(4.25);
      padding    : rs(2.5) rs(6) 0 rs(1.5);
    }

    .ember-power-select-selected-item {
      line-height: rs(4.25);
    }
  }

  &--outlined {
    .ember-power-select-trigger {
      height     : rs(6.75);
      line-height: rs(6.75);
      padding    : 0 rs(6) 0 rs(1.75);
    }

    .ember-power-select-selected-item {
      line-height: rs(6.75);
    }

  }
}

@at-root .ember-basic-dropdown-content {
  @include body-1;
  @include elevation(6);
  background-color: $c-white;
  border          : rem-size(1px) solid $c-mid;
  position        : absolute;
  width           : auto;
  z-index         : 1000;
}

@at-root .ember-power-select-search {
  display       : flex;
  flex-direction: row;
  border-bottom : rem-size(1px) solid $c-light;
}

@at-root .ember-power-select-search-input {
  display    : block;
  height     : rs(7,1);
  line-height: rs(7,1);
  outline    : none;
  padding    : 0 rs(1.75);
  flex       : 1 1 auto;
}

@at-root .ember-power-select-options {
  list-style: none;
  padding   : rs(1) 0;
}

@at-root .ember-power-select-option {
  @include transition-all;
  cursor     : pointer;
  line-height: rs(6);
  padding    : 0 rs(1.75);

  &:hover {
    background: $c-light;
  }

  &[aria-selected="true"],
  &[aria-current="true"] {
    background: rgba($c-accent,0.2);
  }
}

// .uxs-form {
//   &--padding {
//     padding: rs(0.5);
//     @include mq(tablet) {
//       padding: rs(0.5) rs(1);
//     }
//   }
//
//   &--white {
//     color: $c-white;
//   }
//
//   &__control-row {
//     display       : flex;
//     flex-direction: row;
//     max-width     : $max-width-content;
//   }
//
//   &__control {
//     display      : block;
//     margin-bottom: rem-size($baseline*.5);
//     overflow     : hidden;
//     position     : relative;
//     min-height   : rem-size($baseline*4.5);
//
//     &--inline {
//       @include mq(tablet) {
//         margin-right: rem-size($baseline*.5);
//
//         &:last-of-child {
//           margin-right: 0;
//         }
//       }
//     }
//
//     &--row-control {
//       flex        : 1 1 auto;
//       margin-right: rs(.5);
//       @include mq(tablet) {
//         margin-right: rs(1);
//       }
//
//       &:last-child {
//         margin-right: 0;
//       }
//     }
//
//     &--compact {
//       min-height: 0;
//     }
//
//     &--inline-mobile {
//       margin-right: rem-size($baseline*.5);
//
//       &:last-of-child {
//         margin-right: 0;
//       }
//     }
//   }
//
//   &__label {
//     @include label;
//     margin-bottom: rem-size($baseline*0.5);
//     min-height   : rs(1);
//   }
//
//   &__input {
//     @include contrast-background-color-modifiers($prefix:'');
//     @include border-color-modifiers();
//     @include text-color-modifiers($prefix:'');
//     border-color: $c-light;
//
//     &--date,
//     &--datetime,
//     &--email,
//     &--month,
//     &--number,
//     &--password,
//     &--search,
//     &--tel,
//     &--text,
//     &--textarea,
//     &--time,
//     &--url,
//     &--week,
//     &--year {
//       @include input-base;
//       margin: 0;
//     }
//
//     &--date,
//     &--datetime,
//     &--time {
//       padding: rem-size(($baseline*.25) - 1px) rem-size(($baseline*.25) - 2px);
//     }
//
//     &--dropdown {
//       margin-bottom: 0;
//     }
//
//     &--disabled:not([type=checkbox]):not([type=radio]),
//     &:disabled:not([type=checkbox]):not([type=radio]) {
//       cursor      : not-allowed;
//       color       : rgba($c-dark, 0.5);
//       background  : $c-light;
//       border-color: $c-mid;
//     }
//
//     &--inline {
//       margin-right: rem-size($baseline*.5);
//       flex        : 1;
//
//       &:last-of-type {
//         margin-right: 0;
//       }
//     }
//     /* HACK - as dropdowns are not inputs the above last-of-type
//      * selector wont cut it. What we really want is a list-of-class */
//     &+.uxs-form__input--dropdown,
//     &--dropdown+.uxs-form__input {
//       margin-left: rem-size($baseline*.5);
//     }
//   }
//
//   &__error,
//   &__warning {
//     top     : rem-size($baseline*3);
//     position: absolute;
//   }
//
//   &__error,
//   &__warning {
//     @include type-content;
//     @include transition-all;
//     transition-property: color, background-color;
//     @include text-truncate($max-width-content);
//     animation          : slideIn $transition-duration 1;
//     margin             : 0;
//     padding            : 0 rem-size($baseline*0.5);
//     line-height        : rem-size($baseline*1.5);
//     clear              : both;
//     width              : 100%;
//     @include mq(tablet, 'max') {
//       @include type-detail;
//       max-width: $max-width-content;
//     }
//   }
//
//   &__error {
//     background-color: $c-error;
//     color           : $c-white;
//   }
//
//   &__warning {
//     background-color: $c-warning;
//     color           : $c-white;
//   }
//
//   &__tip {
//     @extend .detail;
//     @include contrast-text-color-modifiers();
//     @include transition-all;
//     clear    : both;
//     padding  : 0;
//     max-width: $max-width-content;
//     margin   : 0;
//
//     &--toggle {
//       padding   : 0 rem-size(30px) rem-size($baseline*0.5);
//       margin-top: rem-size($baseline*-0.5);
//     }
//
//     &--error {
//       visibility: hidden;
//     }
//   }
// }
//
// .uxs-form__control--textarea {
//   .uxs-form__error,
//   .uxs-form__warning {
//     top     : auto;
//     position: relative;
//   }
//
//   .uxs-form__tip--error {
//     display   : none;
//     visibility: hidden;
//   }
// }
