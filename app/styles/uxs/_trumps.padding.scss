// Padding Spacing

.p {
  // default alias is the spaceing at "2"
  $default: map-get($spacing-scale, "2") * $defaultPadding;
  // default padding
  padding : rs($default);
  // vertical padding
  &v {
    padding-top   : rs($default);
    padding-bottom: rs($default);
  }
  // horizontal padding
  &h {
    padding-left : rs($default);
    padding-right: rs($default);
  }
  // top padding
  &t {
    padding-top: rs($default);
  }
  // right padding
  &r {
    padding-right: rs($default);
  }
  // bottom padding
  &b {
    padding-bottom: rs($default);
  }
  // left padding
  &l {
    padding-left: rs($default);
  }
  // padding size modifiers
  @each $modifier, $scale in $spacing-scale {
    // All the padding
    &-#{$modifier} {
      padding: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding: rs($scale * $mediaPadding);
        }
      }
    }
    // Vertical (top & bottom)
    &v-#{$modifier} {
      padding-top   : rs($scale * $defaultPadding);
      padding-bottom: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding-top   : rs($scale * $mediaPadding);
          padding-bottom: rs($scale * $mediaPadding);
        }
      }
    }
    // Vertical (left & right)
    &h-#{$modifier} {
      padding-left : rs($scale * $defaultPadding);
      padding-right: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding-left : rs($scale * $mediaPadding);
          padding-right: rs($scale * $mediaPadding);
        }
      }
    }
    // Top
    &t-#{$modifier} {
      padding-top: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding-top: rs($scale * $mediaPadding);
        }
      }
    }
    // Right
    &r-#{$modifier} {
      padding-right: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding-right: rs($scale * $mediaPadding);
        }
      }
    }
    // Bottom
    &b-#{$modifier} {
      padding-bottom: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding-bottom: rs($scale * $mediaPadding);
        }
      }
    }
    // Left
    &l-#{$modifier} {
      padding-left: rs($scale * $defaultPadding);
      @each $media, $mediaPadding in $padding {
        @include mq($media) {
          padding-left: rs($scale * $mediaPadding);
        }
      }
    }
  }
  /* ----------------- */
  /* PADDING + BORDERS */
  /* ----------------- */
}