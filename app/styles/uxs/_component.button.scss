.uxs-button {
  $self             : '.uxs-button';

  // Button Basics
  @include button;
  @include transition-all;
  @include text-truncate;
  border            : none;
  cursor            : pointer;
  display           : flex;
  flex-direction    : row;
  justify-content   : center;
  padding           : rs(1) rs(2);
  position          : relative;
  height            : rs(5);
  max-width         : 100%;
  min-width         : rs(16);
  -webkit-appearance: none;

  @include mq(tablet) {
    max-width: rs(48);
  }

  /* ################ *
   * Disabled Basics  *
   * ################ */
  &--disabled,
  &:disabled {
    cursor: not-allowed;
  }
  /* ################ *
   * Contained Button *
   * ################ */
  &--contained {
    /*
     * Default
     */
    @include elevation(1);
    // Color modifiers
    @each $modifier, $color in $defaultColors {
      &#{$self}--#{$modifier} {
        background-color: $color;
        color           : contrast-color($color);
      }
    }
    /*
     * Hover/Focused/Selected
     */
    &--selected,
    &:focus,
    &:hover {
      @include elevation(4);
    }
    /*
     * Disabled
     */
    &--disabled,
    &:disabled {
      @include elevation(0);
      background-color: $c-mid;
      color           : rgba($c-dark,.5);

      &:focus,
      &:hover {
        @include elevation(0);
      }
    }
  }
  /*
   * Outlined Button
   */
  &--outlined {
    /*
     * Default
     */
    padding-top   : rs(1,1); // Account for border
    padding-bottom: rs(1,1); // size

    // Color modifiers
    @each $modifier, $color in $defaultColors {
      &#{$self}--#{$modifier} {
        border: rem-size(1px) solid $color;
        color : $color;
      }
    }
    /*
     * Hover/Focused/Selected
     */
    &--selected,
    &:focus,
    &:hover {
      background-color: rgba($c-primary,0.2);
    }
    /*
     * Disabled
     */
    &--disabled,
    &:disabled {
      border: rem-size(1px) solid $c-mid;
      color : $c-mid;

      &:focus,
      &:hover {
        background-color: transparent;
      }
    }
  }
  /*
   * Naked Button
   */
  &--naked {
    /*
     * Default
     */
    // Color modifiers
    @each $modifier, $color in $defaultColors {
      &#{$self}--#{$modifier} {
        color: $color;
      }
    }

    /*
     * Hover/Focused/Selected
     */
    // Color modifiers
    @each $modifier, $color in $defaultColors {
      &#{$self}--#{$modifier} {
        &#{$self}--selected,
        &#{$self}:focus,
        &#{$self}:hover {
          background-color: rgba($color,0.2);
        }
      }
    }

    /*
     * Disabled
     */
    &--disabled,
    &:disabled {
      color: $c-mid;

      &:focus,
      &:hover {
        background-color: transparent!important;
      }
    }
  }

  /*
   * Radius modifier
   */
  &--square {
    border-radius: 0;
  }

  &--rounded {
    border-radius: rs(.5);
  }

  &--round {
    border-radius: rs(2.5);
  }

  &--loading {
    animation                : opacityPulse 3s ease-out;
    animation-iteration-count: infinite;
    opacity                  : 1;
  }

  // Button followed by Button
  // & + & {
  //   margin-top: rs(2);
  // }

  /* ############### *
   * Child Elements  *
   * ############### */

  &__icon {
    @include icon;
    margin-right: rs(1);
    margin-left : rs(-.5);
  }

  &__body {
    position: relative;
  }

  &__text {
    visibility: visible;

    &--loading {
      visibility: hidden;
    }
  }

  &__loading {
    visibility: hidden;
    position  : absolute;
    top       : 0;
    left      : 0;
    right     : 0;

    &--loading {
      visibility: visible;
    }
  }
}
